// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ItemStatusLog {
  id            Int      @id @default(autoincrement())
  userCreated   String
  observation   String
  status        String
  createdAt     DateTime @default(now())
  itemType      String   // Novo campo para identificar o tipo de item (Block ou Slide)
  
  // Referência opcional para o modelo Block
  blockId       String?
  block         Block?   @relation("BlockStatusLogs", fields: [blockId], references: [itemCode])
  
  // Referência opcional para o modelo Slide
  slideId       String?
  slide         Slide?   @relation("SlideStatusLogs", fields: [slideId], references: [itemCode])

  @@index([blockId])
  @@index([slideId])
}

// Atualize também os modelos Block e Slide para refletir essas mudanças

model Block {
  itemCode      String          @id @unique
  itemType      String
  boxNumber     String
  spaceNumber   String
  examType      String
  status        String
  createdAt     DateTime        @default(now())
  statusLogs    ItemStatusLog[] @relation("BlockStatusLogs")
}

model Slide {
  itemCode      String          @id @unique
  itemType      String
  boxNumber     String
  spaceNumber   String
  examType      String
  status        String
  createdAt     DateTime        @default(now())
  statusLogs    ItemStatusLog[] @relation("SlideStatusLogs")
}

model User {
  id        Int      @id @default(autoincrement())
  uid       String?   @unique // Inicialmente opcional
  name      String?  @db.VarChar(255)
  photoURL  String?
  role      String   @default("user")
  createdAt DateTime @default(now())
}
